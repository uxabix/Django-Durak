# Generated by Django 5.2.6 on 2025-10-06 19:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CardRank',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CardSuit',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('color', models.CharField(choices=[('red', 'Red'), ('black', 'Black')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('effect_type', models.CharField(choices=[('skip', 'Skip'), ('reverse', 'Reverse'), ('draw', 'Draw'), ('custom', 'Custom')], max_length=10)),
                ('effect_value', models.JSONField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialRuleSet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('min_players', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.cardrank')),
                ('suit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.cardsuit')),
                ('special_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.specialcard')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('finished', 'Finished')], max_length=15)),
                ('loser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('trump_card', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='as_trump', to='game.card')),
            ],
        ),
        migrations.CreateModel(
            name='DiscardPile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.card')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='GameDeck',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.IntegerField()),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.card')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('seat_position', models.IntegerField()),
                ('cards_remaining', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='game.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lobby',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('is_private', models.BooleanField(default=False)),
                ('password_hash', models.CharField(blank=True, max_length=128, null=True)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('playing', 'Playing'), ('closed', 'Closed')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='lobby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.lobby'),
        ),
        migrations.CreateModel(
            name='LobbyPlayer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('ready', 'Ready'), ('playing', 'Playing'), ('left', 'Left')], max_length=10)),
                ('lobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='game.lobby')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerHand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_in_hand', models.IntegerField(blank=True, null=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.card')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LobbySettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('max_players', models.PositiveIntegerField()),
                ('card_count', models.IntegerField(choices=[(24, '24'), (36, '36'), (52, '52')])),
                ('is_transferable', models.BooleanField(default=False)),
                ('neighbor_throw_only', models.BooleanField(default=False)),
                ('allow_jokers', models.BooleanField(default=False)),
                ('turn_time_limit', models.IntegerField(blank=True, null=True)),
                ('lobby', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='game.lobby')),
                ('special_rule_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.specialruleset')),
            ],
        ),
        migrations.CreateModel(
            name='SpecialRuleSetCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.specialcard')),
                ('rule_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.specialruleset')),
            ],
        ),
        migrations.CreateModel(
            name='TableCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attack_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attack_card', to='game.card')),
                ('defense_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='defense_card', to='game.card')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='Turn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('turn_number', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('attack', 'Attack'), ('defend', 'Defend'), ('pickup', 'Pickup')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('table_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.tablecard')),
                ('turn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.turn')),
            ],
        ),
    ]
